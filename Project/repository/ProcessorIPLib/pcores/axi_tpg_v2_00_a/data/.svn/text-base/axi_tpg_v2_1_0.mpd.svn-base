###################################################################
##
## Name     : axi_tpg
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################


BEGIN axi_tpg

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION IP_GROUP = MICROBLAZE:PPC:USER
OPTION DESC = Video Test-Pattern Generator (Engineering)

## Bus Interfaces
BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE

BUS_INTERFACE BUS = XSVI_TPG_IN,          BUS_STD = XSVI,      BUS_TYPE = TARGET
BUS_INTERFACE BUS = XSVI_TPG_OUT,         BUS_STD = XSVI,      BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = XIL_VDMA_TPG_OUT,     BUS_STD = XIL_VFBC,  BUS_TYPE = INITIATOR

#BUS_INTERFACE BUS = DVI_VIDEO_IN,  BUS_STD = DVI_VIDEO, BUS_TYPE = TARGET
#BUS_INTERFACE BUS = DVI_VIDEO_OUT, BUS_STD = DVI_VIDEO, BUS_TYPE = INITIATOR

## Generics for VHDL or Parameters for Verilog
#############################################################################
# AXI 4 Parameters
#############################################################################
PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, BUS = S_AXI, VALUES = (AXI4LITE=AXI4LITE, AXI4=AXI4), TYPE = NON_HDL, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_ID_WIDTH = 4, DT = INTEGER, BUS = S_AXI, BUS = S_AXI, RANGE = (1:16), TYPE = NON_HDL, ASSIGNMENT = CONSTANT
#PARAMETER C_S_AXI_PROTOCOL = AXI4, DT = STRING, BUS = S_AXI, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
#PARAMETER C_S_AXI_PROTOCOL = AXI4, BUS = S_AXI, VALUES = (AXI4LITE=AXI4LITE, AXI4=AXI4), TYPE = NON_HDL
#PARAMETER C_S_AXI_BASEADDR = 0xffffffff, DT = std_logic_vector(31 downto 0), PAIR = C_S_AXI_HIGHADDR, ADDRESS = BASE, BUS = S_AXI, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, MIN_SIZE = 0xFFF, ASSIGNMENT = REQUIRE
#PARAMETER C_S_AXI_HIGHADDR = 0x00000000, DT = std_logic_vector(31 downto 0), PAIR = C_S_AXI_BASEADDR, ADDRESS = HIGH, BUS = S_AXI, CACHEABLE = TRUE, ASSIGNMENT = REQUIRE
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, ADDRESS = BASE, PAIR = C_HIGHADDR, BUS = S_AXI, MIN_SIZE = 0x00400, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, ADDRESS = HIGH, PAIR = C_BASEADDR, BUS = S_AXI, ASSIGNMENT = REQUIRE
PARAMETER C_S_AXI_ADDR_WIDTH = 32, DT = INTEGER, BUS = S_AXI
PARAMETER C_S_AXI_DATA_WIDTH = 32, DT = INTEGER, BUS = S_AXI
PARAMETER C_S_AXI_CLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = S_AXI, IO_IS = clk_freq, CLK_PORT = S_AXI_ACLK, CLK_UNIT = HZ
## ethernetlite has acceptance = 1
#PARAMETER C_S_AXI_WRITE_ACCEPTANCE = 2, DT = INTEGER, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, BUS = S_AXI
#PARAMETER C_S_AXI_READ_ACCEPTANCE = 2, DT = INTEGER, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, BUS = S_AXI
## from ethernetlite
#PARAMETER C_S_AXI_SUPPORTS_NARROW_BURST = 0, DT = INTEGER, TYPE = NON_HDL, BUS = S_AXI, ASSIGNMENT = CONSTANT
#############################################################################
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_CHROMA_FORMAT=0,                 DT = INTEGER, RANGE=(0:1), VALUES = (0 = RGB, 1 = YC422), DESC = Chroma format
PARAMETER C_DATA_WIDTH=8,                    DT = INTEGER, RANGE=(8),       DESC = Video data width
PARAMETER C_NUM_CHANNELS=2,                  DT = INTEGER, RANGE=(2:3), DESC = Number of Video Channels (RGB = 3 channels, YC = 2 channels)

## Ports
#############################################################################
# AXI Ports
#############################################################################
PORT S_AXI_ACLK         = "",           DIR = I, SIGIS = CLK, BUS = S_AXI, ASSIGNMENT = REQUIRE
PORT S_AXI_ARESETN      = ARESETN,      DIR = I, SIGIS = RST, BUS = S_AXI
PORT S_AXI_AWADDR       = AWADDR,       DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_AWVALID      = AWVALID,      DIR = I, BUS = S_AXI
PORT S_AXI_AWREADY      = AWREADY,      DIR = O, BUS = S_AXI
PORT S_AXI_WDATA        = WDATA,        DIR = I, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WSTRB        = WSTRB,        DIR = I, VEC = [((C_S_AXI_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WVALID       = WVALID,       DIR = I, BUS = S_AXI
PORT S_AXI_WREADY       = WREADY,       DIR = O, BUS = S_AXI
PORT S_AXI_BRESP        = BRESP,        DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_BVALID       = BVALID,       DIR = O, BUS = S_AXI
PORT S_AXI_BREADY       = BREADY,       DIR = I, BUS = S_AXI
PORT S_AXI_ARADDR       = ARADDR,       DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_ARVALID      = ARVALID,      DIR = I, BUS = S_AXI
PORT S_AXI_ARREADY      = ARREADY,      DIR = O, BUS = S_AXI
PORT S_AXI_RDATA        = RDATA,        DIR = O, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_RRESP        = RRESP,        DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_RVALID       = RVALID,       DIR = O, BUS = S_AXI
PORT S_AXI_RREADY       = RREADY,       DIR = I, BUS = S_AXI


PORT   clk = "",              DIR = I, SIGIS = CLK

###############################
# XSVI input Bus
###############################
PORT  hsync_in =           "hsync",          DIR = I, BUS = XSVI_TPG_IN
PORT  vsync_in =           "vsync",          DIR = I, BUS = XSVI_TPG_IN
PORT  hblank_in =          "hblank",         DIR = I, BUS = XSVI_TPG_IN
PORT  vblank_in =          "vblank",         DIR = I, BUS = XSVI_TPG_IN
PORT  active_video_in =    "active_video",   DIR = I, BUS = XSVI_TPG_IN
PORT  video_data_in =      "video_data",     DIR = I, VEC = [(C_NUM_CHANNELS*C_DATA_WIDTH)-1:0], BUS = XSVI_TPG_IN

###############################
# XSVI output Bus
###############################
PORT  hsync_out =          "hsync",          DIR = O, BUS = XSVI_TPG_OUT
PORT  vsync_out =          "vsync",          DIR = O, BUS = XSVI_TPG_OUT
PORT  hblank_out =         "hblank",         DIR = O, BUS = XSVI_TPG_OUT
PORT  vblank_out =         "vblank",         DIR = O, BUS = XSVI_TPG_OUT
PORT  active_video_out =   "active_video",   DIR = O, BUS = XSVI_TPG_OUT
PORT  video_data_out =     "video_data",     DIR = O, VEC = [(C_NUM_CHANNELS*C_DATA_WIDTH)-1:0], BUS = XSVI_TPG_OUT

###############################
# VDMA output Bus
###############################
PORT VDMA_wd_clk =         "wd_clk",         DIR = O, BUS = XIL_VDMA_TPG_OUT
PORT VDMA_wd_reset =       "wd_reset",       DIR = O, BUS = XIL_VDMA_TPG_OUT
PORT VDMA_video_out_full = "wd_almost_full", DIR = I, BUS = XIL_VDMA_TPG_OUT
PORT VDMA_video_out_we =   "wd_write",       DIR = O, BUS = XIL_VDMA_TPG_OUT
PORT VDMA_video_data_out = "wd_data",        DIR = O, VEC = [(C_NUM_CHANNELS*C_DATA_WIDTH)-1:0],   BUS = XIL_VDMA_TPG_OUT

PORT   ZP_debug = "",      DIR = O, VEC = [57:0]
PORT   TPG_debug = "",     DIR = O, VEC = [38:0]

END
