##----------------------------------------------------------------
##      _____
##     /     \
##    /____   \____
##   / \===\   \==/
##  /___\===\___\/  AVNET
##       \======/
##        \====/    
##---------------------------------------------------------------
##
## This design is the property of Avnet.  Publication of this
## design is not authorized without written consent from Avnet.
## 
## Please direct any questions to:  technical.support@avnet.com
##
## Disclaimer:
##    Avnet, Inc. makes no warranty for the use of this code or design.
##    This code is provided  "As Is". Avnet, Inc assumes no responsibility for
##    any errors, which may appear in this code, nor does it make a commitment
##    to update the information contained herein. Avnet, Inc specifically
##    disclaims any implied warranties of fitness for a particular purpose.
##                     Copyright(c) 2011 Avnet, Inc.
##                             All rights reserved.
##
##----------------------------------------------------------------
##
## Create Date:         Sep 15, 2011
## Design Name:         FMC-IMAGEON
## Module Name:         fmc_imageon_vita_receiver_v2_1_0.mpd
## Project Name:        FMC-IMAGEON
## Target Devices:      Virtex-6
##                      Kintex-7, Zynq
## Avnet Boards:        FMC-IMAGEON
##
## Tool versions:       ISE 14.1
##
## Description:         FMC-IMAGEON VITA receiver interface.
##                      Microprocessor Peripheral Description
##
## Dependencies:        
##
## Revision:            Sep 15, 2011: 1.00 Initial version:
##                                         - VITA SPI controller 
##                      Sep 22, 2011: 1.01 Added:
##                                         - ISERDES interface
##                      Sep 28, 2011: 1.02 Added:
##                                         - sync channel decoder
##                                         - crc checker
##                                         - data remapper
##                      Oct 20, 2011: 1.03 Modify:
##                                         - iserdes (use BUFR)
##                      Oct 21, 2011: 1.04 Added:
##                                         - fpn prnu correction
##                      Nov 03, 2011: 1.05 Added:
##                                         - trigger generator
##                      Dec 19, 2011: 1.06 Modified:
##                                         - port to Kintex-7
##                      Jan 12, 2012: 1.07 Added:
##                                         - new fsync output port
##                                         Modify:
##                                         - syncgen
##                      Feb 06, 2012: 1.08 Modify:
##                                         - triggergenerator
##                                           (new version with debounce logic)
##                                         - new C_XSVI_DIRECT_OUTPUT option
##                      Feb 22, 2012: 1.09 Modified
##                                         - port to Zynq
##                                         - new C_XSVI_USE_SYNCGEN option
##                      Jun 01, 2012: 1.12 Modify:
##                                         - Move syncgen after demux_fifo
##                                         - Increase size of demux_fifo
##                                           (to tolerate jitter in video timing from sensor)
##                                         - Add programmable delay on framestart for syncgen
##                      Jul 31, 2012: 1.13 Modify:
##                                         - define clk200, clk, clk4x with SIGIS = CLK
##                                         - define reset with SIGIS = RST
##                                         - port to Spartan-6
##
##----------------------------------------------------------------

###################################################################
##
## Name     : fmc_imageon_vita_receiver
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN fmc_imageon_vita_receiver

## Peripheral Options
OPTION STYLE = MIX
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION IP_GROUP = MICROBLAZE:USER
OPTION DESC = FMC_IMAGEON_VITA_RECEIVER
OPTION LONG_DESC = VITA Receiver
OPTION ARCH_SUPPORT_MAP = (others=DEVELOPMENT)


## IO Interfaces
IO_INTERFACE IO_IF = VITA_IO, IO_TYPE = AVT_FMC_IMAGEON_VITA_V1

## Bus Interfaces
BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = XSVI_VIDEO_OUT, BUS_STD = XSVI, BUS_TYPE = INITIATOR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_S_AXI_DATA_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_ADDR_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_MIN_SIZE = 0x000001ff, DT = std_logic_vector, BUS = S_AXI
PARAMETER C_USE_WSTRB = 0, DT = INTEGER
PARAMETER C_DPHASE_TIMEOUT = 8, DT = INTEGER
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, MIN_SIZE = 0x100, PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = S_AXI
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = S_AXI
PARAMETER C_FAMILY = virtex6, DT = STRING
PARAMETER C_NUM_REG = 1, DT = INTEGER
PARAMETER C_NUM_MEM = 1, DT = INTEGER
PARAMETER C_SLV_AWIDTH = 32, DT = INTEGER
PARAMETER C_SLV_DWIDTH = 32, DT = INTEGER
PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, DT = STRING, BUS = S_AXI
PARAMETER C_XSVI_DATA_WIDTH = 10, DT = INTEGER, DESC = XSVI_DATA_WIDTH, RANGE = (8, 10, 16, 24, 40, 64)
PARAMETER C_XSVI_DIRECT_OUTPUT = 0, DT = INTEGER
PARAMETER C_XSVI_USE_SYNCGEN = 1, DT = INTEGER

## AXI4-Lite Pins
PORT S_AXI_ACLK = "", DIR = I, SIGIS = CLK, BUS = S_AXI
PORT S_AXI_ARESETN = ARESETN, DIR = I, SIGIS = RST, BUS = S_AXI
PORT S_AXI_AWADDR = AWADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_AWVALID = AWVALID, DIR = I, BUS = S_AXI
PORT S_AXI_WDATA = WDATA, DIR = I, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WSTRB = WSTRB, DIR = I, VEC = [((C_S_AXI_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WVALID = WVALID, DIR = I, BUS = S_AXI
PORT S_AXI_BREADY = BREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARADDR = ARADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_ARVALID = ARVALID, DIR = I, BUS = S_AXI
PORT S_AXI_RREADY = RREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARREADY = ARREADY, DIR = O, BUS = S_AXI
PORT S_AXI_RDATA = RDATA, DIR = O, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_RRESP = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_RVALID = RVALID, DIR = O, BUS = S_AXI
PORT S_AXI_WREADY = WREADY, DIR = O, BUS = S_AXI
PORT S_AXI_BRESP = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_BVALID = BVALID, DIR = O, BUS = S_AXI
PORT S_AXI_AWREADY = AWREADY, DIR = O, BUS = S_AXI

## Ports
PORT clk200 = "", DIR = I, SIGIS = CLK
PORT clk    = "", DIR = I, SIGIS = CLK
PORT clk4x  = "", DIR = I, SIGIS = CLK
PORT reset  = "", DIR = I, SIGIS = RST
PORT oe     = "", DIR = I

## IO Pins
PORT io_vita_clk_pll    = "", DIR = O             , IO_IF = VITA_IO, IO_IS = vita_clk_pll
PORT io_vita_reset_n    = "", DIR = O             , IO_IF = VITA_IO, IO_IS = vita_reset_n
PORT io_vita_trigger    = "", DIR = O, VEC = [2:0], IO_IF = VITA_IO, IO_IS = vita_trigger
PORT io_vita_monitor    = "", DIR = I, VEC = [1:0], IO_IF = VITA_IO, IO_IS = vita_monitor
PORT io_vita_spi_sclk   = "", DIR = O             , IO_IF = VITA_IO, IO_IS = vita_spi_sclk
PORT io_vita_spi_ssel_n = "", DIR = O             , IO_IF = VITA_IO, IO_IS = vita_spi_ssel_n
PORT io_vita_spi_mosi   = "", DIR = O             , IO_IF = VITA_IO, IO_IS = vita_spi_mosi
PORT io_vita_spi_miso   = "", DIR = I             , IO_IF = VITA_IO, IO_IS = vita_spi_miso
PORT io_vita_clk_out_p  = "", DIR = I             , IO_IF = VITA_IO, IO_IS = vita_clk_out_p
PORT io_vita_clk_out_n  = "", DIR = I             , IO_IF = VITA_IO, IO_IS = vita_clk_out_n
PORT io_vita_sync_p     = "", DIR = I             , IO_IF = VITA_IO, IO_IS = vita_sync_p
PORT io_vita_sync_n     = "", DIR = I             , IO_IF = VITA_IO, IO_IS = vita_sync_n
PORT io_vita_data_p     = "", DIR = I, VEC = [7:0], IO_IF = VITA_IO, IO_IS = vita_data_p
PORT io_vita_data_n     = "", DIR = I, VEC = [7:0], IO_IF = VITA_IO, IO_IS = vita_data_n

## Trigger Port
PORT trigger1 = "", DIR = I

## Frame Sync Port
PORT fsync = "", DIR = O

## XSVI Output Port
PORT xsvi_vsync_o        = "vsync",        DIR = O,                                  BUS = XSVI_VIDEO_OUT
PORT xsvi_hsync_o        = "hsync",        DIR = O,                                  BUS = XSVI_VIDEO_OUT
PORT xsvi_vblank_o       = "vblank",       DIR = O,                                  BUS = XSVI_VIDEO_OUT
PORT xsvi_hblank_o       = "hblank",       DIR = O,                                  BUS = XSVI_VIDEO_OUT
PORT xsvi_active_video_o = "active_video", DIR = O,                                  BUS = XSVI_VIDEO_OUT
PORT xsvi_video_data_o   = "video_data",   DIR = O, VEC = [(C_XSVI_DATA_WIDTH-1):0], BUS = XSVI_VIDEO_OUT

## Debug Ports
PORT debug_host_o    = "", DIR = O, VEC = [231:0]
PORT debug_spi_o     = "", DIR = O, VEC = [ 95:0]
PORT debug_iserdes_o = "", DIR = O, VEC = [229:0]
PORT debug_decoder_o = "", DIR = O, VEC = [186:0]
PORT debug_crc_o     = "", DIR = O, VEC = [ 87:0]
PORT debug_triggen_o = "", DIR = O, VEC = [  9:0]
PORT debug_video_o   = "", DIR = O, VEC = [ 31:0]

END
